// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Agent {
  uuid             String @id
  displayName      String @map("display_name")
  developerName    String @map("developer_name")
  description      String
  displayIcon      String @map("display_icon")
  fullPortrait     String @map("full_portrait")
  killfeedPortrait String @map("killfeed_portrait")
  voiceLine        String @map("voice_line")
  roleUuid         String @map("role_uuid")

  colors    AgentColor[]
  role      AgentRole      @relation(fields: [roleUuid], references: [uuid])
  abilities AgentAbility[]

  @@map("agent")
}

model AgentColor {
  agentUuid String @map("agent_uuid")
  color     String

  agent Agent @relation(fields: [agentUuid], references: [uuid])

  @@id([agentUuid, color])
  @@map("agent_color")
}

model AgentRole {
  uuid        String @id
  displayName String @map("display_name")
  description String
  displayIcon String @map("display_icon")

  agents Agent[]

  @@map("agent_role")
}

enum AbilitySlot {
  Ability1
  Ability2
  Grenade
  Ultimate

  @@map("ability_slot")
}

model AgentAbility {
  agentUuid   String      @map("agent_uuid")
  slot        AbilitySlot
  displayName String      @map("display_name")
  description String
  displayIcon String      @map("display_icon")

  agent Agent @relation(fields: [agentUuid], references: [uuid])

  @@id([agentUuid, slot])
  @@map("agent_ability")
}

model ContentTier {
  uuid          String @id
  displayName   String @map("display_name")
  developerName String @map("developer_name")
  rank          Int    @unique
  color         String
  displayIcon   String @map("display_icon")

  skins WeaponSkin[]

  @@map("content_tier")
}

model Theme {
  uuid        String @id
  displayName String @map("display_name")

  skins   WeaponSkin[]
  buddies Buddy[]
  cards   Card[]

  @@map("theme")
}

enum WeaponCategory {
  Melee
  Sidearm
  Shotgun
  SMG
  Rifle
  Sniper
  Heavy

  @@map("weapon_category")
}

model Weapon {
  uuid           String         @id
  displayName    String         @map("display_name")
  category       WeaponCategory
  displayIcon    String         @map("display_icon")
  killStreamIcon String         @map("kill_stream_icon")

  skins WeaponSkin[]

  @@map("weapon")
}

model WeaponSkin {
  uuid        String  @id
  weaponUuid  String  @map("weapon_uuid")
  displayName String  @map("display_name")
  displayIcon String? @map("display_icon")
  wallpaper   String?
  themeUuid   String? @map("theme_uuid")
  tierUuid    String? @map("tier_uuid")

  weapon Weapon @relation(fields: [weaponUuid], references: [uuid])

  theme Theme?       @relation(fields: [themeUuid], references: [uuid])
  tier  ContentTier? @relation(fields: [tierUuid], references: [uuid])

  chromas WeaponSkinChroma[]
  levels  WeaponSkinLevel[]

  @@map("weapon_skin")
}

model WeaponSkinChroma {
  uuid           String  @id
  weaponSkinUuid String  @map("skin_uuid")
  displayName    String  @map("display_name")
  displayIcon    String? @map("display_icon")
  color          String?
  video          String?

  skin WeaponSkin @relation(fields: [weaponSkinUuid], references: [uuid])

  @@map("weapon_skin_chroma")
}

model WeaponSkinLevel {
  uuid           String  @id
  weaponSkinUuid String  @map("skin_uuid")
  displayName    String  @map("display_name")
  displayIcon    String? @map("display_icon")
  type           String?
  video          String?

  skin WeaponSkin @relation(fields: [weaponSkinUuid], references: [uuid])

  @@map("weapon_skin_level")
}

model Episode {
  uuid        String   @id
  displayName String   @map("display_name")
  start       DateTime @db.Date
  end         DateTime @db.Date

  acts EpisodeAct[]

  @@map("episode")
}

model EpisodeAct {
  uuid        String   @id
  episodeUuid String   @map("episode_uuid")
  displayName String   @map("display_name")
  start       DateTime @db.Date
  end         DateTime @db.Date

  episode Episode @relation(fields: [episodeUuid], references: [uuid])

  @@map("episode_act")
}

model Event {
  uuid        String   @id
  displayName String   @map("display_name")
  start       DateTime @db.Date
  end         DateTime @db.Date

  @@map("event")
}

model Currency {
  uuid        String @id
  displayName String @map("display_name")
  displayIcon String @map("display_icon")

  @@map("currency")
}

model Buddy {
  uuid        String  @id
  displayName String  @map("display_name")
  displayIcon String  @map("display_icon")
  themeUuid   String? @map("theme_uuid")

  theme Theme? @relation(fields: [themeUuid], references: [uuid])

  @@map("buddy")
}

model Card {
  uuid        String  @id
  displayName String  @map("display_name")
  displayIcon String  @map("display_icon")
  wideArt     String  @map("wide_art")
  largeArt    String  @map("large_art")
  themeUuid   String? @map("theme_uuid")

  theme Theme? @relation(fields: [themeUuid], references: [uuid])

  @@map("card")
}
